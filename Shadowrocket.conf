# 懒人配置（含策略组）- 自用修改版
# 参考资料: https://raw.githubusercontent.com/wlxuf/Shadowrocket/main/lazy_group.conf
# TG频道: https://t.me/ShadowrocketApp
# Shadowrocket添加配置方法：配置 - 右上角 ➕ - 粘贴配置链接 - 下载 - 点击对应的配置文件 - 使用配置。
[General]
# Shadowrocket快速使用方法：
# 1.首页 - 添加节点。
# 2.设置 - 延迟测试方法，选择CONNECT。
# 3.首页 - 连通性测试，选择可用节点连接。
# ----------------------------------------------#
# 添加/更新订阅链接时异常原因：
# "forbidden"表示订阅被重置或令牌(token)错误。
# "not found"表示路径信息错误。
# "service unavailable"表示域名信息错误或域名被运营商屏蔽。
# 如果提示“发生了SSL错误，无法建立与该服务器的安全连接”，可以尝试的解决方法：
# 1.全局路由选代理，使用另外一个节点来添加/更新订阅链接。
# 2.切换网络后再添加/更新订阅链接。
# 3.检查订阅链接是否错误或失效。
# ----------------------------------------------#
# Shadowrocket打开HTTPS解密方法：
# 1.点击配置文件ⓘ - HTTPS解密 - 证书 - 生成新的CA证书 - 安装证书。
# 2.手机设置 - 已下载描述文件 - 安装。
# 3.手机设置 - 通用 - 关于本机 - 证书信任设置 - 开启对应Shadowrocket证书信任。
# ----------------------------------------------#
# 旁路系统。如果禁用此选项，可能会导致一些系统问题，如推送通知延迟。
bypass-system = true
# 跳过代理。此选项强制这些域名或IP的连接范围由Shadowrocket TUN接口来处理，而不是Shadowrocket代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = 192.168.0.0/16,193.168.0.0/16,10.0.0.0/8,172.16.0.0/12,127.0.0.1,100.64.0.0/10,17.0.0.0/8,localhost,*.local,e.crashlynatics.com,*.crashlytics.com,www.baidu.com,yunbusiness.ccb.com,passenger.t3go.cn,iosapps.itunes.apple.com,*.local,captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com
# TUN旁路路由。Shadowrocket TUN接口只能处理TCP协议。使用此选项可以绕过指定的IP范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32
# DNS覆写。使用普通DNS或加密DNS（如doh、doq、dot等）覆盖默认的系统DNS。有些dns over https支持http3，所以尝试查询，如果支持就切换到http3，可在doh链接后面加上#no-h3关闭。doh强制通过h3查询的写法是将“https”改成“h3”，如h3://dns.alidns.com/dns-query。
dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,system,223.5.5.5,119.29.29.29,114.114.114.114,202.141.176.93,202.141.178.13,117.50.10.10,119.28.28.28,8.8.8.8,8.8.4.4,1.0.0.1
# 备用DNS。当覆写DNS查询失败或查询时间超过2秒，Shadowrocket会自动回退备用DNS。如需指定多个DNS，可用逗号分隔。system表示回退到系统DNS。
fallback-dns-server = system
# 启用IPv6支持。false表示不启用，true表示启用。（注：即使不启用此选项，当本地网络环境支持IPv6，并且节点域名支持IPv6解析，Shadowrocket也会使用节点的IPv6地址进行访问。解决方法是关闭节点域名的IPv6解析，或者在配置文件的[Host]项目下为节点域名指定IP地址。）
ipv6 = false
# 首选IPv6。优先向IPv6的DNS服务器查询AAAA记录，优先使用AAAA记录。false表示不启用。
prefer-ipv6 = false
# 直连的域名类规则使用系统dns进行查询。false表示不启用。
dns-direct-system = false
# ping数据包自动回复。
icmp-auto-reply = true
# 不开启时，「重写的REJECT策略」默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false
# 私有IP应答。如果不启用此选项，域名解析返回私有IP，Shadowrocket会认为该域名被劫持而强制使用代理。
private-ip-answer = true
# 直连域名解析失败后使用代理。false表示不启用。
dns-direct-fallback-proxy = false
# TUN包含路由。默认情况下，Shadowrocket接口会声明自己为默认路由，但由于Wi-Fi接口的路由较小，有些流量可能不会通过Shadowrocket接口。使用此选项可以添加一个较小的路由表。
tun-included-routes = 
# 总是真实IP。此选项要求Shadowrocket在TUN处理DNS请求时返回一个真实的IP地址而不是假的IP地址。
always-real-ip = *.iCloud.com, *.apple.com, *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com, msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net
# DNS劫持。有些设备或软件总是使用硬编码的DNS服务器，例如Netflix通过Google DNS(8.8.8.8或8.8.4.4)发送请求，您可以使用此选项来劫持查询。
hijack-dns = 8.8.8.8:53,8.8.4.4:53
# 当UDP流量匹配到规则里不支持UDP转发的节点策略时重新选择回退行为，可选行为包括DIRECT、REJECT。DIRECT表示直连转发UDP流量，REJECT表示拒绝转发UDP流量。
udp-policy-not-supported-behaviour = REJECT
# 包含配置。如“include=a.conf”表示当前配置包含另一个配置a.conf的内容，当前配置的优先级高于a.conf。此选项是对配置建立包含关系，以满足同时使用多个配置的需求。
include = 
# 此选项允许返回一个虚假的IP地址，如“stun-response-ip=1.1.1.1”、“stun-response-ipv6=::1”，目的是防止真实IP地址泄漏，提高WebRTC的隐私和安全性。
stun-response-ip=
stun-response-ipv6=
[Proxy]
# 添加本地节点。该项目的节点解析是为了兼容部分配置文件，不能当作Shadowrocket添加节点的优先选择。
# Shadowsocks类型：
# 节点名称=ss,地址,端口,password=密码,其他参数(如method=aes-256-cfb,obfs=websocket,plugin=none)
# Vmess类型：
# 节点名称=vmess,地址,端口,password=密码,其他参数(如alterId=0,method=auto,obfs=websocket,tfo=1)
# VLESS类型：
# 节点名称=vless,地址,端口,password=密码,tls=true,其他参数(如obfs=websocket,peer=example.com)
# HTTP/HTTPS/Socks5/Socks5 Over TLS等类型：
# 节点名称=http,地址,端口,用户,密码
# 节点名称=https,地址,端口,用户,密码
# 节点名称=socks5,地址,端口,用户,密码
# 节点名称=socks5-tls,地址,端口,用户,密码,skip-common-name-verify=true
# Trojan类型：
# 节点名称=trojan,地址,端口,password=密码,其他参数(如allowInsecure=1,peer=example.com)
# Hysteria类型：
# 节点名称=hysteria,地址,端口,auth=密码,obfsParam=混淆,protocol=协议,udp=1,其他参数(如peer=example.com,alpn=h2,upmbps=100,downmbps=100)
# Hysteria2类型：
# 节点名称=hysteria2,地址,端口,auth=密码,obfsParam=混淆,udp=1,其他参数(如peer=example.com,alpn=h3)
# TUIC类型：
# 节点名称=tuic,地址,端口,password=密码,udp=1,其他参数(如user=uuid值,peer=example.com,alpn=h2)
# Juicity类型：
# 节点名称=juicity,地址,端口,password=密码,udp=1,其他参数(如user=uuid值,peer=example.com,alpn=h2)
# WireGuard类型：
# 节点名称=wireguard,地址,端口,privateKey=私钥,publicKey=公钥,ip=子网IP,udp=1,其他参数(如dns=1.1.1.1,mtu=1350,keepalive=40,reserved=1/2/3)
# Snell类型：
# 节点名称=snell,地址,端口,password=密码,udp=1,其他参数(如obfs=http,obfs-host=example.com,obfs-uri=/abc)

[Proxy Group]
# 代理分组类型：
# select:手动切换节点。
# url-test:自动切换延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。
# ----------------------------------------------#
# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 保留节点名称含有关键词A或B的节点:
# A|B
# 排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A).)^((?!(B)).)*$
# ----------------------------------------------#
# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。
# ----------------------------------------------#
# 不含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 含正则筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# 开启订阅筛选的代理分组，示例：
# 名称=类型(如select,url-test,fallback,load-balance,random),订阅名称(多个订阅时,用逗号分隔),use=true,policy-regex-filter=正则式或关键词筛选(省略该参数时,表示匹配对应订阅的全部节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址
# ----------------------------------------------#
Amazon = select, 🇯🇵 JP, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

ChatGPT = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Discord = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Disney+ = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Emby = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Facebook = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Github = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Google = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

HBO = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Instagram = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Linkedin = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Netflix = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

PayPal = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Reddit = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Snapchat = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Spotify = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Telegram = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Threads = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

TikTok = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Twitch = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

Twitter = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

WhatsApp = select, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

YouTube = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

BiliBili = select, 直连模式, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, 🌐, interval=86400, timeout=5, select=0,  url=http://www.gstatic.com/generate_204

Game Platform = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0,  url=http://www.gstatic.com/generate_204

苹果服务 = select, 直连模式, 🌐, interval=86400, timeout=5, select=0,  url=http://www.gstatic.com/generate_204

系统更新 = select, 直连模式, 拦截模式, interval=86400,timeout=5,select=0, url=http://www.gstatic.com/generate_204

谷歌服务 = select, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

微软服务 = select, 直连模式, 🌐, 🇺🇸 US, 🇭🇰 HK, 🇹🇼 TW, 🇸🇬 SG, 🇯🇵 JP, 🇰🇷 KR, interval=86400, timeout=5, select=0, url=http://www.gstatic.com/generate_204

直连模式 = select, DIRECT, 🌐 select=0

拦截模式 = select, REJECT, DIRECT, select=0

🌐 = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=3, select=0, policy-regex-filter=^((?!(官网|流量|加群|订阅|获取|刷新|鸡场|机场|订购|购买|套餐|重置|分享|网址|邀请|公众号|)).)*$

🇭🇰 HK = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=5, select=0, policy-regex-filter=(?=.*((?i)🇭🇰|香|港|香港|香江|香岛|湾仔|港仔|九龙|铜锣湾|旺角|HK|Hong|HongKong))

🇺🇸 US = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=5, select=0, policy-regex-filter=(?=.*((?i)🇺🇸|美|美国|US|American))

🇹🇼 TW = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=5, select=0, policy-regex-filter=(?=.*((?i)🇹🇼|台|台湾|台北|新北|桃园|台中|台南|高雄|基隆|新竹|嘉义|苗栗|彰化|南投|云林|屏东|台东|花莲|宜兰|澎湖|金门|连江|TW|Taiwan))

🇯🇵 JP = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=5, select=0, policy-regex-filter=(?=.*((?i)🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|名古屋|福冈|仙台|京都|Japan))

🇰🇷 KR = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=5, select=0, policy-regex-filter=(?=.*((?i)🇰🇷|韩|韩国|南韩|南朝鲜|高丽|大韩民国|首尔|世宗|济州市|水原|釜山|大邱|仁川|光州|大田|蔚山|KR|Korea|Korean|South Korea))

🇸🇬 SG = url-test, url=http://www.gstatic.com/generate_204, interval=600, tolerance=0, timeout=5, select=0, policy-regex-filter=(?=.*((?i)🇸🇬|新|狮|獅|坡|新加坡|星|星加坡|星洲|狮城|SG|Singapore))

[Rule]
# 规则类型：
# DOMAIN-SUFFIX：匹配请求域名的后缀。如“DOMAIN-SUFFIX,example.com,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN-KEYWORD：匹配请求域名的关键词。如“DOMAIN-KEYWORD,exa,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN：匹配请求的完整域名。如“DOMAIN,www.example.com,DIRECT”只能匹配到“www.example.com”。
# USER-AGENT：匹配用户代理字符串，支持使用通配符“*”。如“USER-AGENT,MicroMessenger*,DIRECT”可以匹配到“MicroMessenger Client”。
# URL-REGEX：匹配URL正则式。如“URL-REGEX,^https?://.+/item.+,REJECT”可以匹配到“https://www.example.com/item/abc/123”。
# IP-CIDR：匹配IPv4或IPv6地址。如“IP-CIDR,192.168.1.0/24,DIRECT”可以匹配到IP段“192.168.1.1～192.168.1.254”。当域名请求遇到IP类规则时，Shadowrocket会向本地DNS服务器发送查询请求，以判断主机IP是否匹配规则。若IP类规则加“no-resolve”(如：IP-CIDR,172.16.0.0/12,DIRECT,no-resolve)，则域名请求将会跳过此规则，不会触发本地DNS查询。
# IP-ASN：匹配IP地址隶属的ASN编号。如"IP-ASN,56040,DIRECT"可以匹配到属于China Mobile Communications Corporation网络的IP地址。
# RULE-SET：匹配规则集内容。规则集的内容需包含规则类型。（兼容仅包含IP地址且不带规则类型的规则集）
# DOMAIN-SET：匹配域名集内容。域名集的内容不包含规则类型。
# SCRIPT：匹配脚本名称。
# DST-PORT：匹配目标主机名的端口号。如“DST-PORT,443,DIRECT”可以匹配到443目标端口。
# GEOIP：匹配IP数据库。如“GEOIP,CN,DIRECT”可以匹配到归属地为CN的IP地址。
# FINAL：兜底策略。如“FINAL,PROXY”表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
# AND：逻辑规则，与规则。如“AND,((DOMAIN,www.example.com),(DST-PORT,123)),DIRECT”可以匹配到“www.example.com:123”。
# NOT：逻辑规则，非规则。如“NOT,((DST-PORT,123)),DIRECT”可以匹配到除了“123”端口的其他所有请求。
# OR：逻辑规则，或规则。如“OR,((DST-PORT,123),(DST-PORT,456)),DIRECT”可以匹配到“123”或“456”端口的所有请求。
# ----------------------------------------------#
# 规则策略：
# PROXY：代理。通过代理服务器转发流量。
# DIRECT：直连。连接不经过任何代理服务器。
# REJECT：拒绝。返回HTTP状态码404，没有内容。
# REJECT-DICT：拒绝。返回HTTP状态码200，内容为空的JSON对象。
# REJECT-ARRAY：拒绝。返回HTTP状态码200，内容为空的JSON数组。
# REJECT-200：拒绝。返回HTTP状态码200，没有内容。
# REJECT-IMG：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-TINYGIF：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-DROP：拒绝。丢弃IP包。
# REJECT-NO-DROP：拒绝。返回ICMP端口不可达。
# 除此之外，规则策略还可以选择「代理分组」、「订阅名称」、「分组」、「节点」。
# ----------------------------------------------#
# 规则匹配的优先级：
# 1.规则从上到下依次匹配。
# 2.域名规则优先于IP规则。
# ----------------------------------------------#
# 关于屏蔽443端口的UDP流量的解释内容：HTTP3/QUIC协议开始流行，但是国内ISP和国际出口的UDP优先级都很低，表现很差，屏蔽掉以强制回退HTTP2/HTTP1.1。（如需启用该逻辑规则，请删除AND前面的注释符号#）
# AND,((PROTOCOL,UDP),(DST-PORT,443)),REJECT-NO-DROP
# ----------------------------------------------#
# AD处理
# Advertising 与 Advertising_Domain 同时启用
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Advertising/Advertising.list, 拦截模式

# Advertising_Domain
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Advertising/Advertising_Domain.list, 拦截模式

# 系统更新
DOMAIN, appstoreconnect.apple.com, 系统更新
DOMAIN, iosapps-ssl.itunes.apple.com, 系统更新
DOMAIN, itcmobile.itunes.apple.com, 系统更新
DOMAIN, mesu.apple.com, 系统更新
DOMAIN, gdmf.apple.com, 系统更新
DOMAIN, updates-http.cdn-apple.com, 系统更新
DOMAIN, xp.apple.com, 系统更新

DOMAIN-KEYWORD, pangolin, 拦截模式
DOMAIN-KEYWORD, pglstatp, 拦截模式
DOMAIN-KEYWORD, adview, 拦截模式
DOMAIN-SUFFIX, gdt.qq.com, 拦截模式
# 掌上公交去广告
DOMAIN, quanguo.mygolbs.com, 拦截模式
DOMAIN, cpu-openapi.baidu.com, 拦截模式
# HDOBOX影视App去广告
DOMAIN-SUFFIX, applovin.com, 拦截模式
DOMAIN-SUFFIX, applvn.com, 拦截模式
# 网易云音乐广告拦截
DOMAIN, admusicpic.music.126.net, 拦截模式
DOMAIN, iadmat.nosdn.127.net, 拦截模式
DOMAIN, iadmusicmat.music.126.net, 拦截模式
DOMAIN, iadmusicmatvideo.music.126.net, 拦截模式

# 直连策略的修正规则集。
RULE-SET,https://raw.githubusercontent.com/wlxuf/add_rule/main/direct-amend.list, DIRECT
# 代理策略的修正规则集。
RULE-SET,https://raw.githubusercontent.com/wlxuf/add_rule/main/proxy-amend.list, PROXY

# 国外常用服务单独分流：
# Amazon
# ChatGPT
# Discord
# Disney+
# Emby
# Facebook
# Github
# Google
# HBO
# Instagram
# Linkedin
# Netflix
# Reddit
# Snapchat
# Spotify
# Telegram
# Threads
# TikTok
# Twittch
# Twitter
# WhatsApp
# YouTube

# 国内常用服务单独分流：
# 苹果服务
# 微软服务
# 哔哩哔哩
# 网易云音乐
# 百度
# 豆瓣
# 微信
# 抖音
# 新浪
# 知乎
# 小红书
# 京东
# 美团
# 豆瓣


# ----------------------------------------------#
# 阿里
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Alibaba/Alibaba.list, 直连模式

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Alibaba/Alibaba_Domain.list, 直连模式

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Alibaba/Alibaba_Resolve.list, 直连模式

# 京东
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/JingDong/JingDong.list, 直连模式

# 美团
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/MeiTuan/MeiTuan.list, 直连模式

# 哔哩哔哩
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/BiliBili/BiliBili.list, BiliBili

# 网易云音乐
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/NetEaseMusic/NetEaseMusic.list, 直连模式

# 百度
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Baidu/Baidu.list, 直连模式

# 豆瓣
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/DouBan/DouBan.list, 直连模式

# 微信
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/WeChat/WeChat.list, 直连模式

# 抖音
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/DouYin/DouYin.list, 直连模式

# 新浪
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Sina/Sina.list, 直连模式

# 知乎
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Zhihu/Zhihu.list, 直连模式

# 小红书
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/XiaoHongShu/XiaoHongShu.list, 直连模式

# 微软服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Microsoft/Microsoft.list, 微软服务

# ----------------------------------------------#
# Amazon
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Amazon/Amazon.list, Amazon

# ChatGPT
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list, CHATGPT

# Discord
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Discord/Discord.list, Discord

# Disney+
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Disney/Disney.list,Disney+

# Emby
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Emby/Emby.list, Emby

# Facebook
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list, Facebook

# Github
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list, Github

# Google
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list, Google

# HBO
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/HBO/HBO.list, HBO

# Instagram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Instagram/Instagram.list, Instagram

# LinkedIn
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/LinkedIn/LinkedIn.list, LinkedIn

# Netflix
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Netflix/Netflix.list, Netflix

# Reddit
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Reddit/Reddit.list, Reddit

# Snapchat
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Snapchat/Snapchat.list, Snapchat

# Spotify
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list, Spotify

# Telegram
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list, Telegram

# Threads
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Threads/Threads.list, Threads

# TikTok
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/TikTok/TikTok.list, TikTok

# Twittch
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Twitch/Twitch.list, Twitch

# Twitter
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Twitter/Twitter.list, Twitter

# WhatsApp
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Whatsapp/Whatsapp.list, WhatsApp

# YouTube
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list,YouTube

# PayPal
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PayPal/PayPal.list, PayPal

# Game Platform
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Sony/Sony.list, Game Platform


RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Nintendo/Nintendo.list, Game Platform


RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Epic/Epic.list, Game Platform


RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/SteamCN/SteamCN.list, Game Platform


RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Steam/Steam.list, Game Platform


RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Game/Game.list, Game Platform

RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Xbox/Xbox.list, Game Platform


# 苹果服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, 苹果服务
DOMAIN-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/AppStore/AppStore.list 苹果服务

# 谷歌服务
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list,谷歌服务

# TVB
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/TVB/TVB.list, 🌐

# 全球加速
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list, 🌐

# 国内直连
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/China/China.list, 直连模式

# China
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/China/China.list, 直连模式

# China_Domain
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/China/China_Domain.list, 直连模式

# ChinaIPs
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaIPs/ChinaIPs.list, 直连模式

# China公司
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list, 直连模式

# China域名
RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list, 直连模式

# ChinaMedia
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMedia/ChinaMedia.list, 直连模式


# 本地局域网地址的规则集。
RULE-SET,https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Lan/Lan.list, DIRECT
# 表示CN地区的IP分流走直连，GEOIP数据库用来判断IP是否属于CN地区。默认使用Shadowrocket自带的GEOIP数据库，如果您想替换其他数据库，可在 设置 - GeoLite2数据库 里添加和修改。
GEOIP,CN, 直连模式
# 表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
FINAL, 🌐

[Host]
# 域名指定本地值：
# example.com=1.2.3.4
# 域名指定DNS服务器：
# example.com=server:1.2.3.4
# wifi名称指定DNS服务器，如需指定多个DNS，可用逗号分隔：
# ssid:wifi名称=server:1.2.3.4
# ----------------------------------------------#
*.apple.com=server:system
*.apple.cn=server:system
*.cdn-apple.com=server:system
*.icloud.com=server:system
*.icloud-content.com=server:system
localhost = 127.0.0.1

[URL Rewrite]
# Google搜索引擎防跳转的重写。
^https?://(www.)?g.cn https://www.google.com 302
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[MITM]
# Shadowrocket仅会解密hostname指定的域名的请求，可以使用通配符。也可以使用前缀 - 排除特定主机名，如 -*.example.com。iOS系统和某些应用有严格的安全策略，仅信任某些特定的证书，对这些域名启动解密可能导致问题，如 *.apple.com，*.icloud.com。
enable = true
hostname = *.google.cn
# ca-passphrase和ca-p12代为证书&主机名部分，可去配置里的「HTTP解密 -> 证书 -> 生成新的CA证书」里自行生成并安装证书，会在此生成对应信息，也可在更新配置前可把旧的配置中passphrase和p12代码拷贝下来, 导入新的配置文件把内容粘贴在对应位置就不用重装证书。
ca-passphrase = Shadowrocket
ca-p12 = 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
